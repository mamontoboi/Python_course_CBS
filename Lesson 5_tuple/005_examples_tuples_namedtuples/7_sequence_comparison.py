# Порівняння послідовностей
print((1, 2, 3) < (1, 2, 4))
print([1, 2, 3] > [1, 2, 4])

print('ABC' < 'C' < 'Pascal' < 'Python')  # because C more than A, P more than C, but Py more than Pa

print((1, 2, 3, 4) < (1, 2, 4))
print((1, 2) < (1, 2, -1))
print((1, 2, 3) == (1.0, 2.0, 3.0))
print((1, 2, ('aa', 'ab')) < (1, 2, ('abc', 'a'), 4))

# Python 2
# [1, 'two'] < ['two', 1]  # True
# Python 3
# [1, 'two'] < ['two', 1]  # TypeError: '<' not supported between instances of 'int' and 'str'

'''
Кортежі та списки порівнюються лексикографічно з використанням порівняння відповідних елементів. Це означає, що
для порівняння рівних, кожен елемент повинен порівнювати рівні, і дві послідовності повинні бути одного типу і мати
однакову довжину.

Якщо не рівні, послідовності розташовуються так само, як їх перші елементи, що відрізняються. Наприклад,
cmp ([1, 2, x], [1, 2, y]) повертає те саме, що й cmp (x, y). Якщо відповідного елемента немає,
спочатку упорядковується більш коротка послідовність (наприклад, [1,2] < [1,2,3]).

З цього випливає:
'''
a = (100, 0)
b = (50, 50)
a > b
# True
# Порівняння всіх елементів двох кортежів по порядку, тому функціональне (використовуючи значення зверху):
a > b
# (True, False) #returned tuple containing each comparison
# all(a > b)
# False
