"""
Профілювання ефективності генератора
"""
import sys

nums_squared_lc = [i * 2 for i in range(10000)]
# 85176
print(sys.getsizeof(nums_squared_lc))

nums_squared_gc = (i ** 2 for i in range(10000))
# 104
print(sys.getsizeof(nums_squared_gc))

"""
В даному випадку розмір списку, отриманого за допомогою виразу становить 85176 байти, а розмір генератора - лише 104!
Тобто, список займає пам'яті у 819 разів більше, ніж генератор!
Однак треба пам'ятати одну річ. Якщо розмір списку менший за доступну пам'ять на працюючій машині, тоді обробка його
займатиме менше часу, ніж аналогічна обробка генератора. Щоб переконатися в цьому, підсумуємо
результати наведених вище виразів. Можна використовувати для аналізу функцію cProfile.run():
"""

import cProfile

cProfile.run('sum([i * 2 for i in range(10000)])')
cProfile.run('sum((i * 2 for i in range(10000)))')
